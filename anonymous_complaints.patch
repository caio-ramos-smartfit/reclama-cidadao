From 10a34b9bed469edfb1d066563289aede84a87935 Mon Sep 17 00:00:00 2001
From: Devin AI <158243242+devin-ai-integration[bot]@users.noreply.github.com>
Date: Mon, 3 Mar 2025 15:17:24 +0000
Subject: [PATCH] =?UTF-8?q?Atualiza=20schema=20com=20campo=20anonymous=20p?=
 =?UTF-8?q?ara=20reclama=C3=A7=C3=B5es?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Co-Authored-By: caio.ramos@smartfit.com <caio.ramos@smartfit.com>
---
 db/schema.rb | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/db/schema.rb b/db/schema.rb
index 1db0104..361c416 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -10,7 +10,7 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema[7.1].define(version: 2025_02_28_200400) do
+ActiveRecord::Schema[7.1].define(version: 2025_03_03_150553) do
   # These are extensions that must be enabled in order to support this database
   enable_extension "plpgsql"
 
@@ -61,6 +61,7 @@ ActiveRecord::Schema[7.1].define(version: 2025_02_28_200400) do
     t.bigint "user_id", null: false
     t.datetime "created_at", null: false
     t.datetime "updated_at", null: false
+    t.boolean "anonymous", default: false
     t.index ["user_id"], name: "index_complaints_on_user_id"
   end
 
-- 
2.34.1

From 46b118c2e112e71978ed1843d48e3b93e081d382 Mon Sep 17 00:00:00 2001
From: Devin AI <158243242+devin-ai-integration[bot]@users.noreply.github.com>
Date: Mon, 3 Mar 2025 15:17:05 +0000
Subject: [PATCH] =?UTF-8?q?Implementa=20funcionalidade=20de=20reclama?=
 =?UTF-8?q?=C3=A7=C3=B5es=20an=C3=B4nimas?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Co-Authored-By: caio.ramos@smartfit.com <caio.ramos@smartfit.com>
---
 app/admin/complaints.rb                       |  24 +-
 app/controllers/complaints_controller.rb      |   4 +-
 app/models/complaint.rb                       |   5 +
 app/views/complaints/edit.html.erb            |  10 +-
 app/views/complaints/index.html.erb           |   7 +-
 app/views/complaints/new.html.erb             |  10 +-
 app/views/complaints/show.html.erb            |   4 +-
 config/initializers/simple_form_bootstrap.rb  | 368 +-----------------
 ...50303150553_add_anonymous_to_complaints.rb |   5 +
 9 files changed, 64 insertions(+), 373 deletions(-)
 create mode 100644 db/migrate/20250303150553_add_anonymous_to_complaints.rb

diff --git a/app/admin/complaints.rb b/app/admin/complaints.rb
index 68b66f3..1280fbd 100644
--- a/app/admin/complaints.rb
+++ b/app/admin/complaints.rb
@@ -1,10 +1,11 @@
 ActiveAdmin.register Complaint do
-  permit_params :title, :description, :category, :status, :address, :latitude, :longitude, :user_id
+  permit_params :title, :description, :category, :status, :address, :latitude, :longitude, :user_id, :anonymous
 
   filter :title
   filter :category
   filter :status
   filter :address
+  filter :anonymous
   filter :created_at
 
   index do
@@ -14,7 +15,15 @@ ActiveAdmin.register Complaint do
     column :category
     column :status
     column :address
-    column :user
+    column :user do |complaint|
+      if complaint.anonymous?
+        span complaint.user.name
+        status_tag "Anônimo", class: "warning"
+      else
+        span complaint.user.name
+      end
+    end
+    column :anonymous
     column :created_at
     actions
   end
@@ -29,7 +38,15 @@ ActiveAdmin.register Complaint do
       row :address
       row :latitude
       row :longitude
-      row :user
+      row :user do |complaint|
+        if complaint.anonymous?
+          span complaint.user.name
+          status_tag "Anônimo", class: "warning"
+        else
+          span complaint.user.name
+        end
+      end
+      row :anonymous
       row :created_at
       row :updated_at
     end
@@ -54,6 +71,7 @@ ActiveAdmin.register Complaint do
       f.input :latitude
       f.input :longitude
       f.input :user
+      f.input :anonymous
     end
     f.actions
   end
diff --git a/app/controllers/complaints_controller.rb b/app/controllers/complaints_controller.rb
index ffef8dd..8f43786 100644
--- a/app/controllers/complaints_controller.rb
+++ b/app/controllers/complaints_controller.rb
@@ -68,9 +68,9 @@ class ComplaintsController < ApplicationController
 
   def complaint_params
     if current_user.admin?
-      params.require(:complaint).permit(:title, :description, :category, :status, :address, :latitude, :longitude)
+      params.require(:complaint).permit(:title, :description, :category, :status, :address, :latitude, :longitude, :anonymous)
     else
-      params.require(:complaint).permit(:title, :description, :category, :address, :latitude, :longitude)
+      params.require(:complaint).permit(:title, :description, :category, :address, :latitude, :longitude, :anonymous)
     end
   end
 end
diff --git a/app/models/complaint.rb b/app/models/complaint.rb
index 541a851..2f0e169 100644
--- a/app/models/complaint.rb
+++ b/app/models/complaint.rb
@@ -37,4 +37,9 @@ class Complaint < ApplicationRecord
   scope :by_period, ->(start_date, end_date) {
     where('created_at >= ? AND created_at <= ?', start_date, end_date) if start_date.present? && end_date.present?
   }
+  
+  # Método para exibir o nome do usuário respeitando o anonimato
+  def user_display_name
+    anonymous? ? "Anônimo" : user.name
+  end
 end
diff --git a/app/views/complaints/edit.html.erb b/app/views/complaints/edit.html.erb
index 9a4fa5e..eacedae 100644
--- a/app/views/complaints/edit.html.erb
+++ b/app/views/complaints/edit.html.erb
@@ -27,6 +27,14 @@
             <%= f.input :address, label: 'Endereço', input_html: { class: 'form-control', id: 'address-input' } %>
             <%= f.input :latitude, as: :hidden, input_html: { id: 'complaint_latitude' } %>
             <%= f.input :longitude, as: :hidden, input_html: { id: 'complaint_longitude' } %>
+            
+            <div class="form-check mb-3">
+              <%= f.input :anonymous, as: :boolean, 
+                         label: 'Denúncia anônima (sua identidade será protegida)',
+                         hint: 'Recomendado para denúncias sensíveis como pontos de drogas ou maus-tratos a animais',
+                         wrapper: :custom_boolean,
+                         input_html: { class: 'form-check-input' } %>
+            </div>
           </div>
 
           <div class='mb-3'>
@@ -45,4 +53,4 @@
   </div>
 </div>
 
-<!-- O script de inicialização do mapa foi movido para o partial _map.html.erb -->
\ No newline at end of file
+<!-- O script de inicialização do mapa foi movido para o partial _map.html.erb -->
diff --git a/app/views/complaints/index.html.erb b/app/views/complaints/index.html.erb
index ef1d708..9d077a4 100644
--- a/app/views/complaints/index.html.erb
+++ b/app/views/complaints/index.html.erb
@@ -56,7 +56,12 @@
           </div>
           <div class='card-footer text-muted'>
             <div class='d-flex justify-content-between'>
-              <span>Por: <%= complaint.user.name %></span>
+              <span>
+                Por: <%= complaint.user_display_name %>
+                <% if complaint.anonymous? %>
+                  <i class="bi bi-incognito" title="Denúncia anônima"></i>
+                <% end %>
+              </span>
               <span><%= time_ago_in_words(complaint.created_at) %> atrás</span>
             </div>
           </div>
diff --git a/app/views/complaints/new.html.erb b/app/views/complaints/new.html.erb
index c5f74e2..c9906c9 100644
--- a/app/views/complaints/new.html.erb
+++ b/app/views/complaints/new.html.erb
@@ -20,6 +20,14 @@
             <%= f.input :address, label: 'Endereço', input_html: { class: 'form-control', id: 'address-input' } %>
             <%= f.input :latitude, as: :hidden, input_html: { id: 'complaint_latitude' } %>
             <%= f.input :longitude, as: :hidden, input_html: { id: 'complaint_longitude' } %>
+            
+            <div class="form-check mb-3">
+              <%= f.input :anonymous, as: :boolean, 
+                         label: 'Denúncia anônima (sua identidade será protegida)',
+                         hint: 'Recomendado para denúncias sensíveis como pontos de drogas ou maus-tratos a animais',
+                         wrapper: :custom_boolean,
+                         input_html: { class: 'form-check-input' } %>
+            </div>
           </div>
 
           <div class='mb-3'>
@@ -54,4 +62,4 @@
   </div>
 </div>
 
-<!-- O script de inicialização do mapa foi movido para o layout da aplicação -->
\ No newline at end of file
+<!-- O script de inicialização do mapa foi movido para o layout da aplicação -->
diff --git a/app/views/complaints/show.html.erb b/app/views/complaints/show.html.erb
index 92176af..54ab581 100644
--- a/app/views/complaints/show.html.erb
+++ b/app/views/complaints/show.html.erb
@@ -30,7 +30,7 @@
       </div>
       <div class='card-footer text-muted'>
         <div class='d-flex justify-content-between'>
-          <span>Registrado por: <%= @complaint.user.name %></span>
+          <span>Registrado por: <%= @complaint.user_display_name %></span>
           <span>Em: <%= @complaint.created_at.strftime('%d/%m/%Y %H:%M') %></span>
         </div>
       </div>
@@ -94,4 +94,4 @@
 </div>
 
 <!-- Incluir o partial de inicialização do mapa para a página de visualização -->
-<%= render 'map_show' %>
\ No newline at end of file
+<%= render 'map_show' %>
diff --git a/config/initializers/simple_form_bootstrap.rb b/config/initializers/simple_form_bootstrap.rb
index 7ec2ec6..5c72d0d 100755
--- a/config/initializers/simple_form_bootstrap.rb
+++ b/config/initializers/simple_form_bootstrap.rb
@@ -1,372 +1,14 @@
 # frozen_string_literal: true
 
-# These defaults are defined and maintained by the community at
-# https://github.com/heartcombo/simple_form-bootstrap
-# Please submit feedback, changes and tests only there.
-
-# Uncomment this and change the path if necessary to include your own
-# components.
-# See https://github.com/heartcombo/simple_form#custom-components
-# to know more about custom components.
-# Dir[Rails.root.join('lib/components/**/*.rb')].each { |f| require f }
-
 # Use this setup block to configure all options available in SimpleForm.
 SimpleForm.setup do |config|
-  # Default class for buttons
-  config.button_class = 'btn'
-
-  # Define the default class of the input wrapper of the boolean input.
-  config.boolean_label_class = 'form-check-label'
-
-  # How the label text should be generated altogether with the required text.
-  config.label_text = lambda { |label, required, explicit_label| "#{label} #{required}" }
-
-  # Define the way to render check boxes / radio buttons with labels.
-  config.boolean_style = :inline
-
-  # You can wrap each item in a collection of radio/check boxes with a tag
-  config.item_wrapper_tag = :div
-
-  # Defines if the default input wrapper class should be included in radio
-  # collection wrappers.
-  config.include_default_input_wrapper_class = false
-
-  # CSS class to add for error notification helper.
-  config.error_notification_class = 'alert alert-danger'
-
-  # Method used to tidy up errors. Specify any Rails Array method.
-  # :first lists the first message for each field.
-  # :to_sentence to list all errors for each field.
-  config.error_method = :to_sentence
-
-  # add validation classes to `input_field`
-  config.input_field_error_class = 'is-invalid'
-  config.input_field_valid_class = 'is-valid'
-
-
-  # vertical forms
-  #
-  # vertical default_wrapper
-  config.wrappers :vertical_form, class: 'mb-3' do |b|
+  # Custom wrappers for input types
+  config.wrappers :custom_boolean, tag: 'div', class: 'form-check', error_class: 'form-group-invalid', valid_class: 'form-group-valid' do |b|
     b.use :html5
-    b.use :placeholder
-    b.optional :maxlength
-    b.optional :minlength
-    b.optional :pattern
-    b.optional :min_max
     b.optional :readonly
-    b.use :label, class: 'form-label'
-    b.use :input, class: 'form-control', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :full_error, wrap_with: { class: 'invalid-feedback' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-  # vertical input for boolean
-  config.wrappers :vertical_boolean, tag: 'fieldset', class: 'mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.wrapper :form_check_wrapper, class: 'form-check' do |bb|
-      bb.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-      bb.use :label, class: 'form-check-label'
-      bb.use :full_error, wrap_with: { class: 'invalid-feedback' }
-      bb.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-  # vertical input for radio buttons and check boxes
-  config.wrappers :vertical_collection, item_wrapper_class: 'form-check', item_label_class: 'form-check-label', tag: 'fieldset', class: 'mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.wrapper :legend_tag, tag: 'legend', class: 'col-form-label pt-0' do |ba|
-      ba.use :label_text
-    end
     b.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :full_error, wrap_with: { class: 'invalid-feedback d-block' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-  # vertical input for inline radio buttons and check boxes
-  config.wrappers :vertical_collection_inline, item_wrapper_class: 'form-check form-check-inline', item_label_class: 'form-check-label', tag: 'fieldset', class: 'mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.wrapper :legend_tag, tag: 'legend', class: 'col-form-label pt-0' do |ba|
-      ba.use :label_text
-    end
-    b.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :full_error, wrap_with: { class: 'invalid-feedback d-block' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-  # vertical file input
-  config.wrappers :vertical_file, class: 'mb-3' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :maxlength
-    b.optional :minlength
-    b.optional :readonly
-    b.use :label, class: 'form-label'
-    b.use :input, class: 'form-control', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :full_error, wrap_with: { class: 'invalid-feedback' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-  # vertical select input
-  config.wrappers :vertical_select, class: 'mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.use :label, class: 'form-label'
-    b.use :input, class: 'form-select', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :full_error, wrap_with: { class: 'invalid-feedback' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-  # vertical multi select
-  config.wrappers :vertical_multi_select, class: 'mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.use :label, class: 'form-label'
-    b.wrapper class: 'd-flex flex-row justify-content-between align-items-center' do |ba|
-      ba.use :input, class: 'form-select mx-1', error_class: 'is-invalid', valid_class: 'is-valid'
-    end
-    b.use :full_error, wrap_with: { class: 'invalid-feedback d-block' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-  # vertical range input
-  config.wrappers :vertical_range, class: 'mb-3' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :readonly
-    b.optional :step
-    b.use :label, class: 'form-label'
-    b.use :input, class: 'form-range', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :full_error, wrap_with: { class: 'invalid-feedback' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-
-  # horizontal forms
-  #
-  # horizontal default_wrapper
-  config.wrappers :horizontal_form, class: 'row mb-3' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :maxlength
-    b.optional :minlength
-    b.optional :pattern
-    b.optional :min_max
-    b.optional :readonly
-    b.use :label, class: 'col-sm-3 col-form-label'
-    b.wrapper :grid_wrapper, class: 'col-sm-9' do |ba|
-      ba.use :input, class: 'form-control', error_class: 'is-invalid', valid_class: 'is-valid'
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback' }
-      ba.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-  # horizontal input for boolean
-  config.wrappers :horizontal_boolean, class: 'row mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.wrapper :grid_wrapper, class: 'col-sm-9 offset-sm-3' do |wr|
-      wr.wrapper :form_check_wrapper, class: 'form-check' do |bb|
-        bb.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-        bb.use :label, class: 'form-check-label'
-        bb.use :full_error, wrap_with: { class: 'invalid-feedback' }
-        bb.use :hint, wrap_with: { class: 'form-text' }
-      end
-    end
-  end
-
-  # horizontal input for radio buttons and check boxes
-  config.wrappers :horizontal_collection, item_wrapper_class: 'form-check', item_label_class: 'form-check-label', class: 'row mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.use :label, class: 'col-sm-3 col-form-label pt-0'
-    b.wrapper :grid_wrapper, class: 'col-sm-9' do |ba|
-      ba.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback d-block' }
-      ba.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-  # horizontal input for inline radio buttons and check boxes
-  config.wrappers :horizontal_collection_inline, item_wrapper_class: 'form-check form-check-inline', item_label_class: 'form-check-label', class: 'row mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.use :label, class: 'col-sm-3 col-form-label pt-0'
-    b.wrapper :grid_wrapper, class: 'col-sm-9' do |ba|
-      ba.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback d-block' }
-      ba.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-  # horizontal file input
-  config.wrappers :horizontal_file, class: 'row mb-3' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :maxlength
-    b.optional :minlength
-    b.optional :readonly
-    b.use :label, class: 'col-sm-3 col-form-label'
-    b.wrapper :grid_wrapper, class: 'col-sm-9' do |ba|
-      ba.use :input, class: 'form-control', error_class: 'is-invalid', valid_class: 'is-valid'
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback' }
-      ba.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-  # horizontal select input
-  config.wrappers :horizontal_select, class: 'row mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.use :label, class: 'col-sm-3 col-form-label'
-    b.wrapper :grid_wrapper, class: 'col-sm-9' do |ba|
-      ba.use :input, class: 'form-select', error_class: 'is-invalid', valid_class: 'is-valid'
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback' }
-      ba.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-  # horizontal multi select
-  config.wrappers :horizontal_multi_select, class: 'row mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.use :label, class: 'col-sm-3 col-form-label'
-    b.wrapper :grid_wrapper, class: 'col-sm-9' do |ba|
-      ba.wrapper class: 'd-flex flex-row justify-content-between align-items-center' do |bb|
-        bb.use :input, class: 'form-select mx-1', error_class: 'is-invalid', valid_class: 'is-valid'
-      end
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback d-block' }
-      ba.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-  # horizontal range input
-  config.wrappers :horizontal_range, class: 'row mb-3' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :readonly
-    b.optional :step
-    b.use :label, class: 'col-sm-3 col-form-label pt-0'
-    b.wrapper :grid_wrapper, class: 'col-sm-9' do |ba|
-      ba.use :input, class: 'form-range', error_class: 'is-invalid', valid_class: 'is-valid'
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback' }
-      ba.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-
-  # inline forms
-  #
-  # inline default_wrapper
-  config.wrappers :inline_form, class: 'col-12' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :maxlength
-    b.optional :minlength
-    b.optional :pattern
-    b.optional :min_max
-    b.optional :readonly
-    b.use :label, class: 'visually-hidden'
-
-    b.use :input, class: 'form-control', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :error, wrap_with: { class: 'invalid-feedback' }
-    b.optional :hint, wrap_with: { class: 'form-text' }
+    b.use :label, class: 'form-check-label'
+    b.use :hint, wrap_with: { tag: 'small', class: 'form-text text-muted' }
+    b.use :error, wrap_with: { tag: 'div', class: 'invalid-feedback' }
   end
-
-  # inline input for boolean
-  config.wrappers :inline_boolean, class: 'col-12' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.wrapper :form_check_wrapper, class: 'form-check' do |bb|
-      bb.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-      bb.use :label, class: 'form-check-label'
-      bb.use :error, wrap_with: { class: 'invalid-feedback' }
-      bb.optional :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-
-  # bootstrap custom forms
-  #
-  # custom input switch for boolean
-  config.wrappers :custom_boolean_switch, class: 'mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.wrapper :form_check_wrapper, tag: 'div', class: 'form-check form-switch' do |bb|
-      bb.use :input, class: 'form-check-input', error_class: 'is-invalid', valid_class: 'is-valid'
-      bb.use :label, class: 'form-check-label'
-      bb.use :full_error, wrap_with: { tag: 'div', class: 'invalid-feedback' }
-      bb.use :hint, wrap_with: { class: 'form-text' }
-    end
-  end
-
-
-  # Input Group - custom component
-  # see example app and config at https://github.com/heartcombo/simple_form-bootstrap
-  config.wrappers :input_group, class: 'mb-3' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :maxlength
-    b.optional :minlength
-    b.optional :pattern
-    b.optional :min_max
-    b.optional :readonly
-    b.use :label, class: 'form-label'
-    b.wrapper :input_group_tag, class: 'input-group' do |ba|
-      ba.optional :prepend
-      ba.use :input, class: 'form-control', error_class: 'is-invalid', valid_class: 'is-valid'
-      ba.optional :append
-      ba.use :full_error, wrap_with: { class: 'invalid-feedback' }
-    end
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-
-  # Floating Labels form
-  #
-  # floating labels default_wrapper
-  config.wrappers :floating_labels_form, class: 'form-floating mb-3' do |b|
-    b.use :html5
-    b.use :placeholder
-    b.optional :maxlength
-    b.optional :minlength
-    b.optional :pattern
-    b.optional :min_max
-    b.optional :readonly
-    b.use :input, class: 'form-control', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :label
-    b.use :full_error, wrap_with: { class: 'invalid-feedback' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-  # custom multi select
-  config.wrappers :floating_labels_select, class: 'form-floating mb-3' do |b|
-    b.use :html5
-    b.optional :readonly
-    b.use :input, class: 'form-select', error_class: 'is-invalid', valid_class: 'is-valid'
-    b.use :label
-    b.use :full_error, wrap_with: { class: 'invalid-feedback' }
-    b.use :hint, wrap_with: { class: 'form-text' }
-  end
-
-
-  # The default wrapper to be used by the FormBuilder.
-  config.default_wrapper = :vertical_form
-
-  # Custom wrappers for input types. This should be a hash containing an input
-  # type as key and the wrapper that will be used for all inputs with specified type.
-  config.wrapper_mappings = {
-    boolean:       :vertical_boolean,
-    check_boxes:   :vertical_collection,
-    date:          :vertical_multi_select,
-    datetime:      :vertical_multi_select,
-    file:          :vertical_file,
-    radio_buttons: :vertical_collection,
-    range:         :vertical_range,
-    time:          :vertical_multi_select,
-    select:        :vertical_select
-  }
 end
diff --git a/db/migrate/20250303150553_add_anonymous_to_complaints.rb b/db/migrate/20250303150553_add_anonymous_to_complaints.rb
new file mode 100644
index 0000000..8cf0e91
--- /dev/null
+++ b/db/migrate/20250303150553_add_anonymous_to_complaints.rb
@@ -0,0 +1,5 @@
+class AddAnonymousToComplaints < ActiveRecord::Migration[7.1]
+  def change
+    add_column :complaints, :anonymous, :boolean, default: false
+  end
+end
-- 
2.34.1

